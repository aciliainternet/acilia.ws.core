@use '../0-settings/_settings-global' as *;
@use '../0-settings/_settings-tabs' as *;
@use '../0-settings/_settings-tables' as *;
@use '../1-tools/_tools-mixin-breakpoint' as *;
@use '../1-tools/_tools-mixin-rem' as *;

/* ==========================================================================
   #TABLES
   ========================================================================== */

/**
 * 1. The border-collapse CSS property specifies that the table's borders are
 *    collapsed and it means that adjacent cells share borders.
 */

.c-table {
    display: table;
    width: 100%;
    max-width: 100%;
    border: $table-border-width solid $table-border-color;
    border-collapse: collapse; /* [1] */
    border-radius: $table-border-radius;
    background-color: $table-background-color;
}


/**
 * Responsive Tables
 *
 * Wrap any table with one of these classes to make it responsive at certain
 * breakpoint.
 *
 * 1. Wrap your table with this class `c-table-responsive` if the table's width
 * is larger than 1200px.
 */

 /* stylelint-disable */
.c-table-responsive { /* [1] */
    display: block;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    width: 100%;

    .c-table {
        display: block;
        overflow-y: hidden;
    }
}

.c-table-responsive\@desktop {
    position: relative;
    overflow: visible;
    min-height: 550px;
    padding: 30px;
}

@media (max-width: $breakpoint-mobile) {

    .c-table-responsive\@mobile {
        display: block;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
        width: 100%;

        .c-table {
            display: block;
            overflow-y: hidden;
        }
    }
}

@media (max-width: $breakpoint-tablet) {

    .c-table-responsive\@tablet {
        display: block;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
        width: 100%;

        .c-table {
            display: block;
            overflow-y: hidden;
        }
    }
}

@media (max-width: $breakpoint-desktop) {

    .c-table-responsive\@desktop {
        display: block;
        -webkit-overflow-scrolling: touch;
        width: 100%;

        .c-table {
            display: table;
            overflow-y: hidden;
        }
    }
}

@media (max-width: $breakpoint-wide) {

    .c-table-responsive\@wide {
        display: block;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
        width: 100%;

        .c-table {
            display: block;
            overflow-y: hidden;
        }
    }
}

/**
 * Use `c-table--zebra` to add zebra-styling to table rows inside the table.
 */

.c-table--zebra {

    tbody tr:nth-of-type(odd) {
        background-color: $table-zebra-row-background-color;
    }
}


/**
 * Highlight table row on hover.
 */

.c-table--highlight {

    > tbody tr:hover {
        background-color: $table-highlight-row-background-color;
    }
}

.c-table--child {
    background-color: $table-highlight-row-background-color;
    border-width: 0;
}


.c-table--fixed {
    table-layout: fixed;
}

/**
 * Table title/caption
 * <caption>
 */

.c-table__title {
    position: relative;
    padding: 25px 30px;
    border: var(--base-border-width) solid var(--base-border-color);
    border-bottom: 0;
    border-radius: 4px 4px 0 0;
    background-color: $table-title-background-color;
    color: $table-title-color;
    font-size: 24px;
    text-align: left;

    small {
        display: inline-block;
        margin-left: 10px;
        color: var(--color-mute);
        font-size: 14px;

        // divider

        &::before {
            content: '';
            position: relative;
            bottom: -2px;
            display: inline-block;
            width: 1px;
            height: 14px;
            margin-right: 12px;
            background-color: #dfe3e9;
        }
    }
}

/**
 * A small icon in table title used to perform general action on table like
 * downloading table content as a report.
 */

.c-table__title-action {
    position: absolute;
    top: 30px;
    right: 30px;
    color: #afb4bb;
    font-size: 22px;
}

/**
 * Table Head
 *
 * Slimmer version of table's head with less sapcing and darker background
 */

.c-table__head--slim {
    padding: 0;
    background-color: $table-head-slim-background-color;

    .c-table__cell {
        padding: $table-head-cell-padding;
    }
}


/**
 * Table Row
 */

.c-table__row {
    border-top: $table-border-width solid $table-border-color; /* [1] */
    border-bottom: $table-border-width solid $table-border-color; /* [1] */

    &:last-child {
        border-bottom: 0;
    }
}

.c-table__row--success,
.c-table__row--danger,
.c-table__row--info,
.c-table__row--warning {
    border-left: 3px solid;
}

.c-table__row--success {
    border-left-color: var(--color-success);
}

.c-table__row--danger {
    border-left-color: var(--color-danger);
}

.c-table__row--info {
    border-left-color: var(--color-info);
}

.c-table__row--warning {
    border-left-color: var(--color-warning);
}

// Collapsable row
.c-table__collapsable-row {

    // &:active {
    //     cursor: grabbing;
    //     cursor: -moz-grabbing;
    //     cursor: -webkit-grabbing;
    //     border: 1px solid var(--focus-input);
    // }

    td, th {
        display: inline-block;
        width: calc((100% - 80px - 70px) / 3);

        &:first-child {
            width: 80px;
            padding-left: 0;
        }

        &:nth-child(2) {
            width: 70px;
            padding-left: 10px;
        }

        &:last-child {
            padding-right: var(--spacer);
            text-align: left;
        }
    }

    .c-table__cell--table {
        width: 100%;
        display: contents;
    }
}


/**
 * Table Cell
 */

.c-table__cell {
    vertical-align: middle;
    padding: $table-cell-padding;
    color: $table-cell-color;
    font-weight: $table-cell-font-weight;
    font-size: $table-cell-font-size;
    text-align: left;
    white-space: nowrap;

    &:has(+ .c-table__cell--table) {
        padding-right: var(--spacer);
    }

    &:last-child:not(.c-table__cell--table) {
        padding-right: var(--spacer);
        text-align: right;
    }
}

.c-table__cell--head {
    color: var(--color-mute);
    font-weight: var(--font-weight-semibold);
    font-size: var(--text-font-size);
}


/**
 * Table cell with image
 *
 * 2. Use flexbox to make sure all table-cell content is vertically centered.
 */

.c-table__cell--img {
    display: flex; /* [2] */
    flex-wrap: wrap;
    align-items: center;
}

$table-cell-font-weight: var(--font-weight-normal);
$table-cell-line-height: var(--base-line-height);


.c-table {
    display: table;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    width: 100%;

    &__cell {
        color: var(--gunmetal-100);
        font-weight: var(--font-weight-normal);

        &--batch {
            width: 50px;
        }
    }

    &__collapse {
        display: none;

        &.is-active {
            display: table-row;
        }
    }

    &__link {
        display: block;
        color: var(--gunmetal-100);
        font-weight: var(--font-weight-normal);
        font-size: $table-cell-font-size;
        line-height: $table-cell-line-height;

        overflow: initial;
        max-width: initial;
        text-overflow: initial;
        white-space: initial;


        &:hover {
            color: var(--gunmetal-200);
            text-decoration: none;
        }
    }

    &__toggle {
        position: relative;
        background-color: var(--color-transparent);
        outline: none;

        &:hover {
            text-decoration: underline;
        }

        &::before {
            content: initial;
        }

        &.is-open {

            &::before {
                content: initial;
            }
        }

        .o-arrow {
            margin-left: 5px;
        }
    }

    &__sorting {
        display: inline-block;
        padding-right: 30px;

        /* Need to overwrite template/vendor/_datatables-custom.scss because they have too many levels of css specificity */

        &::after,
        &::before {
            right: 30px !important;
        }

        &::after {
            bottom: -5px !important;
        }

        &::before {
            top: -5px !important;
        }
    }

    &__sorting-link {
        position: relative;
        z-index: 2;
        color: var(--gunmetal-100);
        font-weight: var(--font-weight-medium);
    }

    &__row--to-read {
        background: color-mix(in srgb,var(--color-brand),#000 25%);
    }
}

.c-table-collapse {
    padding: 20px 30px;
    background-color: var(--white);
    font-size: .875rem;

    &__item {
        font-weight: var(--font-weight-semibold);
        font-size: 1rem;

        &:not(:last-child) {
            margin-bottom: 20px;
        }
    }

    &__sub-list {
        margin: 10px 0 0 20px;
        font-weight: var(--font-weight-normal);
        font-size: .875rem;
        line-height: 1.125rem;
    }

    &__sub-item {
        font-weight: var(--font-weight-normal);
        font-size: .813rem;
    }
}

.c-table-responsive {
    border: $table-border-width solid $table-border-color;
}

.ws-table-collapse {
    cursor: pointer;
}

.c-table__row-actions {
    display: flex;
}

.c-table__actions {
    display: flex;
    gap: 8px;
    justify-content: flex-end;
}

.c-table__btn {
    min-width: 40px;
    display: grid;
    place-content: center;
    position: relative;
    padding: var(--btn-padding);
    font-size: var(--btn-font-size);
    line-height: 1;
    cursor: pointer;
    appearance: none;
}
/* stylelint-enable */
